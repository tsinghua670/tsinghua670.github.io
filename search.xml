<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Maven工程变灰色解决方法</title>
      <link href="/2020/05/09/maven-gong-cheng-bian-hui-se-jie-jue-fang-fa/"/>
      <url>/2020/05/09/maven-gong-cheng-bian-hui-se-jie-jue-fang-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Maven工程变灰色解决方法"><a href="#Maven工程变灰色解决方法" class="headerlink" title="Maven工程变灰色解决方法"></a>Maven工程变灰色解决方法</h1><p>在使用idea的过程中，遇到其中一个maven模块变成灰色，如下所示：</p><p><img src="/2020/05/09/maven-gong-cheng-bian-hui-se-jie-jue-fang-fa/image-20200509205143629.png" alt="image-20200509205143629"></p><p>​        造成这个的原因可能是忽略了maven模块，可以尝试如下解决方法：在idea中maven的setting中找到ignored files,看右边的面板中是否将变灰的maven模块忽略了。我的模块变灰就是因为这个原因，Settings–&gt;Maven–&gt;Ignored Files 看看是不是有勾选的。去掉就好了。</p><p><img src="/2020/05/09/maven-gong-cheng-bian-hui-se-jie-jue-fang-fa/image-20200509205212747.png" alt="image-20200509205212747"></p>]]></content>
      
      
      <categories>
          
          <category> 开发环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选择排序</title>
      <link href="/2020/05/08/xuan-ze-pai-xu/"/>
      <url>/2020/05/08/xuan-ze-pai-xu/</url>
      
        <content type="html"><![CDATA[<h1 id="选择排序-java实现"><a href="#选择排序-java实现" class="headerlink" title="选择排序(java实现)"></a>选择排序(java实现)</h1><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>  在数组中，</p><p>在0 ~ N-1 找到最小的元素放到0位置上</p><p>在1 ~ N-1 找到最小的元素放到1位置上</p><p>在2 ~ N-1 找到最小的元素放到1位置上</p><p>​                     。。。。。。。</p><p>直至最后</p><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** *  * @author cxr * 选择排序 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Code_SelectSort</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">selectSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> null <span class="token operator">||</span> arr<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> minIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                minIndex <span class="token operator">=</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">?</span> minIndex <span class="token operator">:</span> j<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//            int tmp = arr[minIndex];</span><span class="token comment" spellcheck="true">//            arr[minIndex] = arr[i];</span><span class="token comment" spellcheck="true">//            arr[i] = tmp;</span>            <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> i<span class="token punctuation">,</span> minIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        Code_SelectSort<span class="token punctuation">.</span><span class="token function">selectSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7-hadoop3.2.0环境搭建</title>
      <link href="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/"/>
      <url>/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS7下搭建hadoop3-2-0完全分布式"><a href="#CentOS7下搭建hadoop3-2-0完全分布式" class="headerlink" title="CentOS7下搭建hadoop3.2.0完全分布式"></a>CentOS7下搭建hadoop3.2.0完全分布式</h1><p>（全程使用root用户操作）</p><p>这里搭建的是3个节点的完全分布式，即1个nameNode，2个dataNode，分别如下：</p><p>CentOS-master  nameNode  192.168.11.140</p><p>CentOS-node1  dataNode   192.168.11.141</p><p>CentOS-node2  dataNode   192.168..11.142</p><p>参考源：<a href="https://www.cnblogs.com/andy6/p/7440804.html" target="_blank" rel="noopener">https://www.cnblogs.com/andy6/p/7440804.html</a></p><p>实验环境：</p><p>​    Vmware12 </p><p>软件版本：</p><p>​    jdk-8u181-linux-x64.tar.gz ，hadoop-3.2.0</p><p>一、 实现步骤:</p><ol><li>首先创建好一个CentOS虚拟机，将它作为主节点我这里起名为CentOS-master，起什么都行，不固定要求</li></ol><ol start="2"><li><p>虚拟机安装完成后，配置静态IP（以下网络配置图片来自参考网址）</p><p>详细配置步骤可参考以下博客：</p><p><a href="https://blog.csdn.net/aafeiyang/article/details/81533542" target="_blank" rel="noopener">https://blog.csdn.net/aafeiyang/article/details/81533542</a></p></li></ol><p>   第一步：</p><p>   第二步：</p><p>   第三步：</p><p>   第四步：修改一个配置文件（ifcfg-ens33这个文件不同的电脑可能文件名字不一样）</p><p>   ​       <strong>vim /etc/sysconfig/network-scripts/ifcfg-ens33</strong></p><pre><code>   DEVICE=&quot;eth0&quot;   BOOTPROTO=&quot;static&quot;  &lt;!--将原来的dhcp改成&quot;static&quot;--&gt;   HWADDR=&quot;00:0C:29:83:7F:54&quot;   IPV6INIT=&quot;yes&quot;   NM_CONTROLLED=&quot;yes&quot;   ONBOOT=&quot;yes&quot;    &lt;!--这儿要将&quot;no&quot;改成&quot;yes&quot;--&gt;   TYPE=&quot;Ethernet&quot;   UUID=&quot;aae85c0a-42db-4772-b940-0fc9c875afd2&quot;   IPADDR=192.168.174.10   &lt;!--IP地址配一个自己想要配的地址，但是必须是同VMnet8的子网IP在同一网段--&gt;   GATEWAY=192.168.174.2 &lt;!--网关，这个值与我们在“NAT（设置S）...”设置的网关一样--&gt;   NETMASK=255.255.255.0  &lt;!--子网掩码--&gt;   DNS1=192.168.174.2         &lt;!--DNS的值也跟我们“NAT（设置）...”设置的的网关一样--&gt;</code></pre><p>   第五步：重启虚拟机</p><ol start="3"><li><p>安装和配置jdk</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/wps4.jpg" alt="img"> </p></li></ol><p>   <img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/wps5.jpg" alt="img"></p><ol start="4"><li><p>输入 systemctl stop firewalld.service ，关闭防火墙</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508161020198.png" alt="image-20200508161020198"></p></li><li><p>输入 systemctl disable firewalld.service ，禁用防火墙</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508161014673.png" alt="image-20200508161014673"></p></li><li><p>输入 mkdir /usr/local/hadoop 创建一个hadoop的文件夹</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508161011052.png" alt="image-20200508161011052"></p></li><li><p>进入存放hadoop  jar包的目录，输入 tar -zxvf hadoop-3.2.0.tar.gz -C /usr/local/hadoop解压tar包</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160952891.png" alt="image-20200508160952891"></p></li><li><p>输入 vim /etc/profile 或vim /etc/profile，配置环境变量</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160949817.png" alt="image-20200508160949817"></p></li><li><p>加入如下内容，保存并退出</p><p>HADOOP_HOME=/usr/local/hadoop/hadoop-3.2.0/</p><p>PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160928274.png" alt="image-20200508160928274"></p></li><li><p>输入 source /etc/profile ，使环境变量生效</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160923977.png" alt="image-20200508160923977"></p></li><li><p>任意目录输入 hado ，然后按Tab，如果自动补全为hadoop，则说明环境变量配的没问题，否则检查环境变量哪出错了</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160919536.png" alt="image-20200508160919536"></p></li><li><p>创建3个之后要用到的文件夹，分别如下：</p><p>mkdir /usr/local/hadoop/tmp</p><p>mkdir -p /usr/local/hadoop/hdfs/name</p><p>mkdir /usr/local/hadoop/hdfs/data</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160914134.png" alt="image-20200508160914134"></p></li><li><p>进入hadoop解压后的 /etc/hadoop 目录，里面存放的是hadoop的配置文件，接下来要修改这里面一些配置文件</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160907935.png" alt="image-20200508160907935"></p></li><li><p>有2个.sh文件，需要指定一下JAVA的目录，首先输入 vim hadoop-env.sh 修改配置文件</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160903295.png" alt="image-20200508160903295"></p></li><li><p>找到JAVA_HOME注释区，去掉注释，根据自己的JDK安装位置，精确配置JAVA_HOME如下，保存并退出</p><p>export JAVA_HOME=/opt/java/jdk1.8.0_181/</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160857709.png" alt="image-20200508160857709"></p></li><li><p>输入 vim yarn-env.sh 修改配置文件</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160847083.png" alt="image-20200508160847083"></p></li><li><p>在文件头加入如下内容，指定JAVA_HOME，保存并退出</p><p>export JAVA_HOME=/opt/java/jdk1.8.0_181/</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160833139.png" alt="image-20200508160833139"></p></li><li><p>输入 vim core-site.xml 修改配置文件</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160827118.png" alt="image-20200508160827118"></p></li><li><p>在configuration标签中，添加如下内容，保存并退出，注意这里配置的hdfs:master:9000是不能在浏览器访问的</p><pre><code>&lt;property&gt;    &lt;name&gt; fs.default.name &lt;/name&gt;    &lt;value&gt;hdfs://master:9000&lt;/value&gt;&lt;/property&gt;&lt;property&gt;    &lt;name&gt;fs.defaultFS&lt;/name&gt;    &lt;value&gt;hdfs://master:9000&lt;/value&gt;&lt;/property&gt;&lt;property&gt;    &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;    &lt;value&gt;/usr/local/hadoop/tmp&lt;/value&gt;&lt;/property&gt;</code></pre><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160818214.png" alt="image-20200508160818214"></p></li><li><p>输入 vim hdfs-site.xml 修改配置文件</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160813085.png" alt="image-20200508160813085"></p></li><li><p>在configuration标签中，添加如下内容，保存并退出</p><pre><code>&lt;property&gt;     &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;     &lt;value&gt;file:/usr/local/hadoop/hdfs/name&lt;/value&gt;&lt;/property&gt;&lt;property&gt;      &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;      &lt;value&gt;file:/usr/local/hadoop/hdfs/data&lt;/value&gt;&lt;/property&gt;&lt;property&gt;      &lt;name&gt;dfs.replication&lt;/name&gt;      &lt;value&gt;1&lt;/value&gt;&lt;/property&gt;</code></pre><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160807726.png" alt="image-20200508160807726"></p></li><li><p>输入 vim mapred-site.xml 修改配置文件</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160800472.png" alt="image-20200508160800472"></p></li><li><p>在configuration标签中，添加如下内容，保存并退出</p><pre><code>&lt;property&gt;        &lt;name&gt;mapreduce.framework.name&lt;/name&gt;        &lt;value&gt;yarn&lt;/value&gt;&lt;/property&gt;</code></pre><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160754267.png" alt="image-20200508160754267"></p></li><li><p>输入 vim yarn-site.xml 修改配置文件</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160742937.png" alt="image-20200508160742937"></p></li><li><p>在configuration标签中，添加如下内容，保存并退出</p><pre><code>&lt;property&gt;    &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;    &lt;value&gt;master&lt;/value&gt;&lt;/property&gt;&lt;property&gt;    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;&lt;/property&gt;</code></pre><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160735620.png" alt="image-20200508160735620"></p></li><li><p>输入 vim workers 修改配置文件</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160730425.png" alt="image-20200508160730425"></p></li><li><p>将localhost删掉，加入如下内容，即dataNode节点的主机名</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160725303.png" alt="image-20200508160725303"></p></li><li><p>将虚拟机关闭，再复制两份虚拟机，重命名为如下，注意这里一定要关闭虚拟机，再复制</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160718744.png" alt="image-20200508160718744"></p></li><li><p>将3台虚拟机都打开，后两台复制的虚拟机打开时，都选择“我已复制该虚拟机”</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160715055.png" alt="image-20200508160715055"></p></li><li><p>将node1的IP地址改为192.168.11.141，    将node2 IP地址改为192.168.11.142</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160709310.png" alt="image-20200508160709310"></p></li><li><p>在master机器上，输入 vim /etc/hostname，将localhost改为master，保存并退出</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160703419.png" alt="image-20200508160703419"></p></li><li><p>在node1机器上，输入 vim /etc/hostname，将localhost改为node1，保存并退出</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160657723.png" alt="image-20200508160657723"></p></li><li><p>在node2机器上，输入 vim /etc/hostname，将localhost改为node2，保存并退出</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160650455.png" alt="image-20200508160650455"></p></li><li><p>在三台机器分别输入 vim /etc/hosts 修改文件，其作用是将一些常用的网址域名与其对应的IP地址建立一个关联，当用户在访问网址时，系统会首先自动从Hosts文件中寻找对应的IP地址</p></li><li><p>三个文件中都加入如下内容，保存并退出，注意这里要根据自己实际IP和节点主机名进行更改，IP和主机名中间要有一个空格</p><p>192.168.11.140 master</p><p>192.168.11.141 node1</p><p>192.168.11.142 node2</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160643833.png" alt="image-20200508160643833"></p></li><li><p>在master机器上输入 ssh-keygen -t dsa -P ‘’ -f ~/.ssh/id_dsa 创建一个无密码的公钥，-t是类型的意思，dsa是生成的密钥类型，-P是密码，’’表示无密码，-f后是秘钥生成后保存的位置</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160637143.png" alt="image-20200508160637143"></p></li><li><p>在master机器上输入 cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys 将公钥id_dsa.pub添加进keys，这样就可以实现无密登陆ssh</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160630628.png" alt="image-20200508160630628"></p></li><li><p>在master机器上输入 ssh master 测试免密码登陆</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160625477.png" alt="image-20200508160625477"></p></li><li><p>如果有询问，则输入 yes ，回车</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160620349.png" alt="image-20200508160620349"></p></li><li><p>在node1主机上执行 mkdir ~/.ssh</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160616568.png" alt="image-20200508160616568"></p></li><li><p>在node2主机上执行 mkdir ~/.ssh</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160610928.png" alt="image-20200508160610928"></p></li><li><p>在master机器上输入 scp <del>/.ssh/authorized_keys root@node1:</del>/.ssh/authorized_keys 将主节点的公钥信息导入node1节点，导入时要输入一下node1机器的登陆密码</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160604749.png" alt="image-20200508160604749"></p></li><li><p>在master机器上输入 scp <del>/.ssh/authorized_keys root@node2:</del>/.ssh/authorized_keys 将主节点的公钥信息导入node2节点，导入时要输入一下node2机器的登陆密码</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160559286.png" alt="image-20200508160559286"></p></li><li><p>在三台机器上分别执行 chmod 600 ~/.ssh/authorized_keys 赋予密钥文件权限</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/wps1.jpg" alt="img"></p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/wps2.jpg" alt="img"> </p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/wps3.jpg" alt="img"></p></li><li><p>在master节点上分别输入 ssh node1 和 ssh node2 测试是否配置ssh成功</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160539731.png" alt="image-20200508160539731"></p></li><li><p>在master机器上，任意目录输入 hdfs namenode -format 格式化namenode，第一次使用需格式化一次，之后就不用再格式化，如果改一些配置文件了，可能还需要再次格式化</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160532722.png" alt="image-20200508160532722"></p></li><li><p>格式化完成</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160526052.png" alt="image-20200508160526052"></p></li><li><p>在master机器上，进入hadoop的sbin目录，输入 ./start-all.sh 启动hadoop</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160510421.png" alt="image-20200508160510421">)<img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160515446.png" alt="image-20200508160515446">)<img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160519165.png" alt="image-20200508160519165"></p><p><em>如果报错</em></p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160502322.png" alt="image-20200508160502322"></p></li></ol><pre><code>***修改以下4个文件：***在/usr/local/hadoop/Hadoop-3.2.0/sbin路径下： 将start-dfs.sh，stop-dfs.sh两个文件顶部添加以下参数```</code></pre><p>#!/usr/bin/env bash</p><pre><code>HDFS_DATANODE_USER=rootHADOOP_DATANODE_SECURE_USER=hdfsHDFS_NAMENODE_USER=rootHDFS_SECONDARYNAMENODE_USER=root```还有，start-yarn.sh，stop-yarn.sh顶部也需添加以下参数：```</code></pre><p>#!/usr/bin/env bash</p><pre><code>YARN_RESOURCEMANAGER_USER=rootHADOOP_SECURE_DN_USER=yarnYARN_NODEMANAGER_USER=root```修改后重启 start-all.sh</code></pre><ol start="49"><li><p>输入 jps 查看当前java的进程，该命令是JDK1.5开始有的，作用是列出当前java进程的PID和Java主类名，nameNode节点除了JPS，还有3个进程，启动成功</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160442709.png" alt="image-20200508160442709"></p></li><li><p>在node1机器和node2机器上分别输入 jps 查看进程如下，说明配置成功</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160425107.png" alt="image-20200508160425107">)<img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160430270.png" alt="image-20200508160430270"></p></li><li><p>在浏览器访问nameNode节点的8088端口和9870端口可以查看hadoop的运行状况</p><p><img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160402263.png" alt="image-20200508160402263">)<img src="/2020/05/08/centos7-hadoop3-2-0-huan-jing-da-jian/image-20200508160415831.png" alt="image-20200508160415831"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冒泡排序(java实现)</title>
      <link href="/2020/05/07/mou-pao-pai-xu-java-shi-xian/"/>
      <url>/2020/05/07/mou-pao-pai-xu-java-shi-xian/</url>
      
        <content type="html"><![CDATA[<p>数组 [3,2,6,0,7]</p><p>下标   0 1 2 3 4</p><p>​    如果0位置上的数比1位置上的数大，两个数交换，否则不换，以此类推，之后每两个数相比较，最后，数组中最大的数就会到达数组最后的位置上；即每次都是相邻的两个数作比较，直至排序成功。</p><p>代码实现如下：</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** *  * @author cxr *    冒泡排序 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Code_BubbleSort</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">bubbleSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr <span class="token operator">==</span> null <span class="token operator">||</span> arr<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> end <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> end <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> end<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> arr<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">int</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    arr<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        Code_BubbleSort<span class="token punctuation">.</span><span class="token function">bubbleSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/05/06/hello-world/"/>
      <url>/2020/05/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
